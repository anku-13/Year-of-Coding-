#include<cmath>
long numberOfNumbersGreater(int digits[],int digitSize,int beginIndex,long fact[],int factSize)
{
  if(beginIndex>=digitSize-1)
  {
    return 0;
  }
  long count=0;
  for(int i=beginIndex+1;i<digitSize;i++)
  {
    if(digits[beginIndex]<digits[i])
    {
      count=count+fact[digitSize-beginIndex-1];
    }
  }
  count+=numberOfNumbersGreater(digits,digitSize,beginIndex+1,fact,digitSize);
  return count;
}
long numberOfNumbersGreater(long num){
	// Write your code here
if(num<10)
{
  return 0;
}
  int numDigits=(int)log10(num)+1;
  int*digits=new int[numDigits];
  int k=numDigits-1;
  for(int i=0;i<numDigits;i++)
  {
    digits[k]=(int)(num%10);
    num=num/10;
    k--;
  }
  long*fact=new long[numDigits+1];
  fact[0]=1;
  for(int i=1;i<=numDigits;i++)
  {
    fact[i]=i*fact[i-1];
  }
  return numberOfNumbersGreater(digits,numDigits,0,fact,numDigits);
}
